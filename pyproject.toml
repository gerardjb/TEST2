[build-system]
requires = ["scikit-build-core", "pybind11"]
build-backend = "scikit_build_core.build"

[project]
name = "spike_find"
version = "0.1.0"
license.file = "LICENSE"
requires-python = ">=3.8"
description = "End-to-end fluorescence to spike inference procedure"
authors = [
    { name = "Gerard Joey Broussard", email = "gerardjb@princeton.edu" },
]
dynamic = ["version"]
dependencies = [
    "numpy==1.19.5",
    "scipy",
    "matplotlib==3.6.0",
    "tensorflow",  # pip install CPU and GPU tensorflow
    "h5py",
    "ruamel.yaml",
]

[project.optional-dependencies]
 test = [
   "pytest >=6",
   "pytest-cov >=3",
 ]
 dev = [
   "pytest >=6",
   "pytest-cov >=3",
 ]
 docs = [
   "sphinx>=7.0",
   "myst_parser>=0.13",
   "sphinx_copybutton",
   "sphinx_autodoc_typehints",
   "furo>=2023.08.17",
 ]

 [tool.scikit-build]
 minimum-version = "0.4"
 cmake.args = ['-DCMAKE_TOOLCHAIN_FILE=vcpkg/scripts/buildsystems/vcpkg.cmake', '-DCMAKE_BUILD_TYPE=RelWithDebInfo']
 build-dir = "build/{wheel_tag}"
 metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
 sdist.include = ["src/spike_find/_version.py"]
 
 
 [tool.setuptools_scm]
 write_to = "src/spike_find/_version.py"
 
 
 [tool.cibuildwheel]
 test-command = "pytest {project}/tests"
 test-extras = ["test"]
 test-skip = ["*universal2:arm64"]

 [tool.pytest.ini_options]
 minversion = "6.0"
 addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
 xfail_strict = true
 filterwarnings = [
   "error",
 ]
 log_cli_level = "INFO"
 testpaths = [
   "tests",
 ]
